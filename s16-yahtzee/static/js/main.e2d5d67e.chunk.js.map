{"version":3,"sources":["Die.js","Dice.js","RuleRow.js","Rules.js","ScoreTable.js","Game.js","App.js","index.js"],"names":["Die","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","click","bind","assertThisInitialized","props","handleClick","idx","_this$props","disabled","icons","val","locked","rolling","react_default","a","createElement","className","concat","onClick","Component","defaultProps","Dice","dice","map","d","src_Die_0","key","RuleRow","score","name","doScore","desc","Rule","params","assign","reduce","prev","curr","freqs","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","value","err","return","slice","filter","length","TotalOneNumber","evalRoll","count","SumDistro","_this2","freq","some","c","sum","FullHouse","_this3","includes","SmallStraight","_this4","acc","max","Math","LargeStraight","Set","size","has","_this5","Yahtzee","_this6","ones","twos","threes","fours","fives","sixes","threeOfKind","fourOfKind","fullHouse","smallStraight","largeStraight","yahtzee","chance","ScoreTable","scores","total","cellSpacing","src_RuleRow_0","evt","localStorage","getItem","initialState","Array","from","fill","rollsLeft","Game","state","reset","roll","toggleLocked","setState","setTimeout","st","i","ceil","random","n","rulename","ruleFn","objectSpread","defineProperty","gameOver","_this$state","setItem","src_Dice_0","every","x","src_ScoreTable_0","App","src_Game_0","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.e2d5d67e.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './Die.css';\r\n\r\nclass Die extends Component {\r\n  constructor() {\r\n    super();\r\n    this.click = this.click.bind(this);\r\n  }\r\n\r\n  static defaultProps = {\r\n    icons: [\r\n      'fas fa-square',\r\n      'fas fa-dice-one',\r\n      'fas fa-dice-two',\r\n      'fas fa-dice-three',\r\n      'fas fa-dice-four',\r\n      'fas fa-dice-five',\r\n      'fas fa-dice-six'\r\n    ]\r\n  };\r\n  click() {\r\n    this.props.handleClick(this.props.idx);\r\n  }\r\n  render() {\r\n    const { disabled, icons, val, locked, rolling } = this.props;\r\n    return <i className={`Die ${icons[val || 0]}${locked ? ' Die-locked' : ''}${rolling ? ' Die-rolling' : ''}`} onClick={this.click} disabled={disabled} />;\r\n  }\r\n}\r\n\r\nexport default Die;\r\n","import React, { Component } from 'react';\r\nimport Die from './Die';\r\nimport './Dice.css';\r\n\r\nclass Dice extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"Dice\">\r\n        {this.props.dice.map((d, idx) => (\r\n          <Die\r\n            handleClick={this.props.handleClick}\r\n            val={d}\r\n            locked={this.props.locked[idx]}\r\n            idx={idx}\r\n            key={idx}\r\n            rolling={!this.props.locked[idx] && this.props.rolling}\r\n            disabled={this.props.disabled}\r\n          />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dice;\r\n","import React, { Component } from 'react';\r\nimport './RuleRow.css';\r\n\r\nclass RuleRow extends Component {\r\n  render() {\r\n    const { score, name, doScore, desc } = this.props;\r\n    return (\r\n      <tr className={`RuleRow RuleRow-${score != null ? 'disabled' : 'active'}`} onClick={doScore}>\r\n        <td className=\"RuleRow-name\">{name}</td>\r\n        <td className=\"RuleRow-score\">{score != null ? score : desc}</td>\r\n      </tr>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RuleRow;\r\n","/** Rule for Yahtzee scoring.\r\n *\r\n * This is an \"abstract class\"; the real rules are subclasses of these.\r\n * This stores all parameters passed into it as properties on the instance\r\n * (to simplify child classes so they don't need constructors of their own).\r\n *\r\n * It contains useful functions for summing, counting values, and counting\r\n * frequencies of dice. These are used by subclassed rules.\r\n */\r\n\r\nclass Rule {\r\n  constructor(params) {\r\n    // put all properties in params on instance\r\n    Object.assign(this, params);\r\n  }\r\n\r\n  sum(dice) {\r\n    // sum of all dice\r\n    return dice.reduce((prev, curr) => prev + curr);\r\n  }\r\n\r\n  freq(dice) {\r\n    // frequencies of dice values\r\n    const freqs = [0, 0, 0, 0, 0, 0, 0];\r\n    for (let d of dice) freqs[d] = (freqs[d] || 0) + 1;\r\n    return freqs.slice(1);\r\n  }\r\n\r\n  count(dice, val) {\r\n    // # times val appears in dice\r\n    return dice.filter(d => d === val).length;\r\n  }\r\n}\r\n\r\n/** Given a sought-for val, return sum of dice of that val.\r\n *\r\n * Used for rules like \"sum of all ones\"\r\n */\r\n\r\nclass TotalOneNumber extends Rule {\r\n  evalRoll = dice => {\r\n    return this.val * this.count(dice, this.val);\r\n  };\r\n}\r\n\r\n/** Given a required # of same dice, return sum of all dice.\r\n *\r\n * Used for rules like \"sum of all dice when there is a 3-of-kind\"\r\n */\r\n\r\nclass SumDistro extends Rule {\r\n  evalRoll = dice => {\r\n    // do any of the counts meet of exceed this distro?\r\n    return this.freq(dice).some(c => c >= this.count) ? this.sum(dice) : 0;\r\n  };\r\n}\r\n\r\n/** Check if full house (3-of-kind and 2-of-kind) */\r\n\r\nclass FullHouse extends Rule {\r\n  //3 of one value and 2 of another\r\n  evalRoll = dice => (this.freq(dice).includes(2) && this.freq(dice).includes(3) ? this.score : 0);\r\n}\r\n\r\n/** Check for small straights. */\r\n\r\nclass SmallStraight extends Rule {\r\n  // 4 values in a row\r\n  evalRoll = dice => {\r\n    //Loop through each frequency\r\n    const maxRow = this.freq(dice).reduce(\r\n      (acc, val) => {\r\n        //If current position is present, add to current row length, otherwise start over\r\n        const curr = val ? acc.curr + 1 : 0;\r\n        //Replace the max row length if greater\r\n        const max = Math.max(curr, acc.max);\r\n        return { max, curr };\r\n      },\r\n      //Start with a 0-length row\r\n      { max: 0, curr: 0 }\r\n    );\r\n    return maxRow.max >= 4 ? this.score : 0;\r\n  };\r\n}\r\n\r\n/** Check for large straights. */\r\n\r\nclass LargeStraight extends Rule {\r\n  evalRoll = dice => {\r\n    const d = new Set(dice);\r\n\r\n    // large straight must be 5 different dice & only one can be a 1 or a 6\r\n    return d.size === 5 && (!d.has(1) || !d.has(6)) ? this.score : 0;\r\n  };\r\n}\r\n\r\n/** Check if all dice are same. */\r\n\r\nclass Yahtzee extends Rule {\r\n  evalRoll = dice => {\r\n    // all dice must be the same\r\n    return this.freq(dice)[0] === 5 ? this.score : 0;\r\n  };\r\n}\r\n\r\n// ones, twos, etc score as sum of that value\r\nconst ones = new TotalOneNumber({ val: 1, desc: 'Score 1 for every 1' });\r\nconst twos = new TotalOneNumber({ val: 2, desc: 'Score 2 for every 2' });\r\nconst threes = new TotalOneNumber({ val: 3, desc: 'Score 3 for every 3' });\r\nconst fours = new TotalOneNumber({ val: 4, desc: 'Score 4 for every 4' });\r\nconst fives = new TotalOneNumber({ val: 5, desc: 'Score 5 for every 5' });\r\nconst sixes = new TotalOneNumber({ val: 6, desc: 'Score 6 for every 6' });\r\n\r\n// three/four of kind score as sum of all dice\r\nconst threeOfKind = new SumDistro({ count: 3, desc: 'If 3+ of one, score sum of all' });\r\nconst fourOfKind = new SumDistro({ count: 4, desc: 'If 4+ of one, score sum of all' });\r\n\r\n// full house scores as flat 25\r\nconst fullHouse = new FullHouse({ score: 25, desc: 'If 3 and 2 of each, score 25' });\r\n\r\n// small/large straights score as 30/40\r\nconst smallStraight = new SmallStraight({ score: 30, desc: 'If 4+ in a row, score 30' });\r\nconst largeStraight = new LargeStraight({ score: 40, desc: 'If 5+ in a row, score 40' });\r\n\r\n// yahtzee scores as 50\r\nconst yahtzee = new Yahtzee({ score: 50, desc: 'If all values match, score 50' });\r\n\r\n// for chance, can view as some of all dice, requiring at least 0 of a kind\r\nconst chance = new SumDistro({ count: 0, desc: 'Score sum of all dice' });\r\n\r\nexport { ones, twos, threes, fours, fives, sixes, threeOfKind, fourOfKind, fullHouse, smallStraight, largeStraight, yahtzee, chance };\r\n","import React, { Component } from 'react';\r\nimport RuleRow from './RuleRow';\r\nimport './ScoreTable.css';\r\nimport {\r\n  ones,\r\n  twos,\r\n  threes,\r\n  fours,\r\n  fives,\r\n  sixes,\r\n  threeOfKind,\r\n  fourOfKind,\r\n  fullHouse,\r\n  smallStraight,\r\n  largeStraight,\r\n  yahtzee,\r\n  chance\r\n} from './Rules';\r\n\r\nclass ScoreTable extends Component {\r\n  render() {\r\n    const { scores, doScore } = this.props;\r\n\r\n    let total = 0;\r\n    for (const key in scores) total += scores[key] || 0;\r\n\r\n    return (\r\n      <div className=\"ScoreTable\">\r\n        <section className=\"ScoreTable-section\">\r\n          <h2>Upper</h2>\r\n          <table cellSpacing=\"0\">\r\n            <tbody>\r\n              <RuleRow name=\"Ones\" score={scores.ones} doScore={evt => doScore('ones', ones.evalRoll)} desc={ones.desc} />\r\n              <RuleRow name=\"Twos\" score={scores.twos} doScore={evt => doScore('twos', twos.evalRoll)} desc={twos.desc} />\r\n              <RuleRow name=\"Threes\" score={scores.threes} doScore={evt => doScore('threes', threes.evalRoll)} desc={threes.desc} />\r\n              <RuleRow name=\"Fours\" score={scores.fours} doScore={evt => doScore('fours', fours.evalRoll)} desc={fours.desc} />\r\n              <RuleRow name=\"Fives\" score={scores.fives} doScore={evt => doScore('fives', fives.evalRoll)} desc={fives.desc} />\r\n              <RuleRow name=\"Sixes\" score={scores.sixes} doScore={evt => doScore('sixes', sixes.evalRoll)} desc={sixes.desc} />\r\n            </tbody>\r\n          </table>\r\n        </section>\r\n        <section className=\"ScoreTable-section ScoreTable-section-lower\">\r\n          <h2>Lower</h2>\r\n          <table cellSpacing=\"0\">\r\n            <tbody>\r\n              <RuleRow\r\n                name=\"Three of Kind\"\r\n                score={scores.threeOfKind}\r\n                doScore={evt => doScore('threeOfKind', threeOfKind.evalRoll)}\r\n                desc={threeOfKind.desc}\r\n              />\r\n              <RuleRow\r\n                name=\"Four of Kind\"\r\n                score={scores.fourOfKind}\r\n                doScore={evt => doScore('fourOfKind', fourOfKind.evalRoll)}\r\n                desc={fourOfKind.desc}\r\n              />\r\n              <RuleRow\r\n                name=\"Full House\"\r\n                score={scores.fullHouse}\r\n                doScore={evt => doScore('fullHouse', fullHouse.evalRoll)}\r\n                desc={fullHouse.desc}\r\n              />\r\n              <RuleRow\r\n                name=\"Small Straight\"\r\n                score={scores.smallStraight}\r\n                doScore={evt => doScore('smallStraight', smallStraight.evalRoll)}\r\n                desc={smallStraight.desc}\r\n              />\r\n              <RuleRow\r\n                name=\"Large Straight\"\r\n                score={scores.largeStraight}\r\n                doScore={evt => doScore('largeStraight', largeStraight.evalRoll)}\r\n                desc={largeStraight.desc}\r\n              />\r\n              <RuleRow name=\"Yahtzee\" score={scores.yahtzee} doScore={evt => doScore('yahtzee', yahtzee.evalRoll)} desc={yahtzee.desc} />\r\n              <RuleRow name=\"Chance\" score={scores.chance} doScore={evt => doScore('chance', chance.evalRoll)} desc={chance.desc} />\r\n            </tbody>\r\n          </table>\r\n        </section>\r\n        <section className=\"ScoreTable-section ScoreTable-section-total\">\r\n          <table cellSpacing=\"0\">\r\n            <tbody>\r\n              <tr className=\"RuleRow\">\r\n                <td className=\"RuleRow-name\" />\r\n                <td className=\"RuleRow-score\" />\r\n              </tr>\r\n              <tr className=\"RuleRow RuleRow-total\">\r\n                <td className=\"RuleRow-name\">TOTAL</td>\r\n                <td className=\"RuleRow-score\">{total}</td>\r\n              </tr>\r\n              <tr className=\"RuleRow\">\r\n                <td className=\"RuleRow-name\">Hi-Score</td>\r\n                <td className=\"RuleRow-score\">{localStorage.getItem('hiscore')}</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ScoreTable;\r\n","import React, { Component } from 'react';\r\nimport Dice from './Dice';\r\nimport ScoreTable from './ScoreTable';\r\nimport './Game.css';\r\n\r\nconst NUM_DICE = 5;\r\nconst NUM_ROLLS = 3;\r\n\r\nconst initialState = {\r\n  dice: Array.from({ length: NUM_DICE }),\r\n  locked: Array(NUM_DICE).fill(false),\r\n  rollsLeft: NUM_ROLLS,\r\n  scores: {\r\n    ones: undefined,\r\n    twos: undefined,\r\n    threes: undefined,\r\n    fours: undefined,\r\n    fives: undefined,\r\n    sixes: undefined,\r\n    threeOfKind: undefined,\r\n    fourOfKind: undefined,\r\n    fullHouse: undefined,\r\n    smallStraight: undefined,\r\n    largeStraight: undefined,\r\n    yahtzee: undefined,\r\n    chance: undefined\r\n  },\r\n  rolling: false\r\n};\r\n\r\nclass Game extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = initialState;\r\n    this.reset = this.reset.bind(this);\r\n    this.roll = this.roll.bind(this);\r\n    this.doScore = this.doScore.bind(this);\r\n    this.toggleLocked = this.toggleLocked.bind(this);\r\n  }\r\n\r\n  reset() {\r\n    this.setState(initialState);\r\n  }\r\n\r\n  roll(evt) {\r\n    // roll dice whose indexes are in reroll\r\n    if (!this.state.rolling) {\r\n      this.setState({ rolling: true }, () => {\r\n        setTimeout(() => {\r\n          this.setState(st => ({ dice: this.state.dice.map((d, i) => (this.state.locked[i] ? d : Math.ceil(Math.random() * 6))) }));\r\n        }, 250);\r\n        setTimeout(() => {\r\n          this.setState(st => ({\r\n            rolling: false,\r\n            locked: st.rollsLeft > 1 ? st.locked : Array(NUM_DICE).fill(true),\r\n            rollsLeft: st.rollsLeft - 1\r\n          }));\r\n        }, 1000);\r\n      });\r\n    }\r\n  }\r\n\r\n  toggleLocked(idx) {\r\n    // toggle whether idx is in locked or not\r\n    if (this.state.rollsLeft) {\r\n      this.setState(st => ({\r\n        locked: st.locked.map((n, i) => (i === idx ? !n : n))\r\n      }));\r\n    }\r\n  }\r\n\r\n  doScore(rulename, ruleFn) {\r\n    if (this.state.dice.some(d => d != null) && !this.state.dice.rolling) {\r\n      if (this.state.scores[rulename] == null) {\r\n        // evaluate this ruleFn with the dice and score this rulename\r\n        this.setState(st => ({\r\n          scores: { ...st.scores, [rulename]: ruleFn(this.state.dice) },\r\n          rollsLeft: NUM_ROLLS,\r\n          locked: Array(NUM_DICE).fill(false),\r\n          dice: Array.from({ length: NUM_DICE })\r\n        }));\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let gameOver = true;\r\n    const { scores, locked, dice, rolling, rollsLeft } = this.state;\r\n    for (const key in scores) if (scores[key] == null) gameOver = false;\r\n    if (gameOver) {\r\n      let total = 0;\r\n      for (const key in scores) total += scores[key] || 0;\r\n      localStorage.setItem('hiscore', Math.max(localStorage.getItem('hiscore'), total));\r\n    }\r\n\r\n    return (\r\n      <div className=\"Game\">\r\n        <header className=\"Game-header\">\r\n          <h1 className=\"Game-title\">Yahtzee!</h1>\r\n\r\n          <section className=\"Game-dice-section\">\r\n            <Dice dice={dice} locked={locked} disabled={this.state.rollsLeft === 0} handleClick={this.toggleLocked} rolling={rolling} />\r\n            <div className=\"Game-button-wrapper\">\r\n              <button className=\"Game-reroll\" disabled={locked.every(x => x)} onClick={gameOver ? this.reset : this.roll}>\r\n                {gameOver ? 'Play Again' : `${rollsLeft} Rolls Left`}\r\n              </button>\r\n            </div>\r\n          </section>\r\n        </header>\r\n        <ScoreTable doScore={this.doScore} scores={scores} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Game;\r\n","import React, { Component } from \"react\";\r\nimport Game from \"./Game\";\r\nimport \"./App.css\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className='App'>\r\n        <Game />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}